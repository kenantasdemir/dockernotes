docker container run -d --publish 8080:80
docker container run -d --publish 8080:80 -p 8043:443
//containerı detach olarak oluşturur. 8080 portu ile containerın 443 portu ile eşleştirir. 

docker container run -d --publish 8080:80 -p 53:53/udp
//container oluşturur ve Docker host'un 53 numaralı UDP portunu konteynerın 53 numaralı UDP portuna yönlendirir.


docker container run -d --publish 8080:80 kenant42/ornekdocker
//kenant42/ornekdocker imajından bir container oluşturur. 8080 portu ile containerın 80 portunu eşler.


default bridge ile bağlı containerlar arasında DNS hizmeti yoktur


docker container run -d --name websunucu1 kenant42/ornekdocker
docker container run -it -d --name database1 kenant42/ornekdocker sh
//kenant42/ornekdocker imajından database1 adlı container oluşturur ve bu container içinde shell açar


docker ps -a
//çalışan ya da çalışmayan tüm containerları listeler.

docker container rm -f hfda5ad56had56hf hgfsja99afdsag5v12
//id değerleri belirtilen 2 containerı siler
//-f seçeneği ise bu containerların çalışması durumunda silmeye zorlar.



docker network create kopru1
//kopru1 adlı network nesnesi oluşturuldu.

docker network create --driver host
//host network oluşturdu

docker network ls
//network objelerini listeler.

docket network inspect kopru1
//kopru1 adlı network objesininin özelliklerini görüntüler.



docker container run -dit --name websunucu --net kopru1 kenant42/ornekdocker sh

docker container run -dit --name database --net kopru1 kenant42/ornekdocker sh
//kenant42/ornekdocker imajından database adlı container oluşturur. bu containerı kopru1 adlı networke bağlar.
//-dit = -d -it
//d parametresi u containerın detach modda çalışaağı belirtilir.
//-it parametresi bu containera interaktif bir şekilde bağlanacağını belirtir.
//son olarak sh parametresi ile bu container içinde shell açar

docker ps

docker network inspect kopru1
//kopru1 adlı network nesnesinin özelliklerini görüntüler.

docker attach websunucu
//database adlı docker konteynerının çalışma zamanı konsoluna bağlanmak için kullanılır.


user tanımlı bridge'e bağlı olan containerlar arasında DNS hizmeti vardır

---------------------------------------------------------------------------------------------------------------------------------------

docker network create --driver=bridge --subnet=10.10.0.0/16 --ip-range=10.10.10.0/24 --gateway=10.10.10.10 kopru2
docker network ls

docker network inspect kopru2

---------------------------------------------------------------------------------------------------------------------------------------

kullanıcı tanımlı köprülerin önemli bir özelliği
containerlar çalışırken bunlara bağlanabilir
default bridge'te bu özellik yok

read escape sequence
docker network connect kopru2 database
//database adlı containerı kopru2 adlı network objesini bağlar

docker attach database
//database adlı docker konteynerının çalışma zamanı konsoluna bağlanmak için kullanılır.


bir container aynı anda birden fazla bridge bağlanabilir.

docker network disconnect kopru2 database
//containerla köprü bağlantısını kestik

docker network inspect kopru2



//eğer bir köprü bir containera bağlı ise bu köprü silinemez


docker network rm kopru2
//kopru2 adlı network objesini siler.

docker container rm -f websunucu database
//websunucu ve database adlı 2 containerı siler.

docker network rm kopru1










































